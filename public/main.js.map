{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/factory/factory.component.css","webpack:///./src/app/factory/factory.component.html","webpack:///./src/app/factory/factory.component.ts","webpack:///./src/app/shared/factory.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-factory></app-factory>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { FactoryComponent } from './factory/factory.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FactoryComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule  \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class= \\\"row\\\">\\r\\n  <div class=\\\"col s12\\\">\\r\\n    <div class=\\\"card blue-grey darken-10\\\">\\r\\n      <div class=\\\"card-content white-text\\\">\\r\\n        <ul><h3>Root<span style=\\\"float:right;\\\"> <a class=\\\"waves-effect waves-light btn modal-trigger\\\" href=\\\"#modal1\\\" >+</a></span></h3>\\r\\n          <br>\\r\\n          <ul *ngFor=\\\"let fac of factoryService.factories\\\"data-role=\\\"treeview\\\" >\\r\\n            <li><h5>{{fac.name}} <span style=\\\"float:right;\\\"><a class=\\\"btn modal-trigger\\\" href=\\\"#modal1\\\" (click)=\\\"onEdit(fac)\\\">edit</a>\\r\\n              <a class=\\\"waves-effect waves-light btn\\\" (click)=\\\"onDelete(fac._id)\\\">Delete</a>\\r\\n            </span> </h5></li>\\r\\n            {{fac.lower}}:{{fac.upper}}\\r\\n            <ul>\\r\\n              <li>{{fac.children[0]}}</li>\\r\\n              <li>{{fac.children[1]}}</li>\\r\\n              <li>{{fac.children[2]}}</li>\\r\\n              <li>{{fac.children[3]}}</li>\\r\\n              <li>{{fac.children[4]}}</li>\\r\\n              <li>{{fac.children[5]}}</li>\\r\\n              <li>{{fac.children[6]}}</li>\\r\\n              <li>{{fac.children[7]}}</li>\\r\\n              <li>{{fac.children[8]}}</li>\\r\\n              <li>{{fac.children[9]}}</li>\\r\\n              <li>{{fac.children[10]}}</li>\\r\\n              <li>{{fac.children[11]}}</li>\\r\\n              <li>{{fac.children[12]}}</li>\\r\\n              <li>{{fac.children[13]}}</li>\\r\\n              <li>{{fac.children[14]}}</li>\\r\\n              <li>{{fac.children[15]}}</li>\\r\\n            </ul>\\r\\n          </ul>\\r\\n        </ul> \\r\\n</div>\\r\\n<div id=\\\"modal1\\\" class=\\\"modal\\\">\\r\\n  <div class=\\\"modal-content\\\">\\r\\n    <form [formGroup]=\\\"rForm\\\">\\r\\n      <div class=\\\"form-container\\\">\\r\\n      <input  type=\\\"hidden\\\" formControlName=\\\"_id\\\"  [(ngModel)] = \\\"this._id\\\">        \\r\\n        <label>Factory Name\\r\\n          <input type=\\\"text\\\" formControlName=\\\"name\\\" [(ngModel)] = \\\"this.name\\\">\\r\\n        </label>\\r\\n        <div class=\\\"alert\\\" *ngIf=\\\"!rForm.controls['name'].valid && rForm.controls['name'].touched\\\">This is required.</div>\\r\\n        <label>Lower Bound\\r\\n            <input type=\\\"number\\\" formControlName=\\\"lower\\\" [(ngModel)] = \\\"this.lower\\\">\\r\\n        </label>\\r\\n        <label>Upper Bound\\r\\n            <input type=\\\"number\\\" formControlName=\\\"upper\\\" [(ngModel)] = \\\"this.upper\\\">\\r\\n        </label>\\r\\n        <label>Number of Child Nodes\\r\\n            <input type=\\\"number\\\" formControlName=\\\"children\\\" [(ngModel)] = \\\"this.children\\\">\\r\\n        </label>\\r\\n        <div class=\\\"alert\\\" *ngIf=\\\"!rForm.controls['children'].valid && rForm.controls['children'].touched\\\">Must be between 1 and 15 inclusive.</div>\\r\\n\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <!-- <a href=\\\"#!\\\" class=\\\"modal-close waves-effect waves-green btn-flat\\\" (click)=\\\"onSubmit(factoryForm)\\\" [disabled]=\\\"!bookForm.form.valid\\\" >Submit</a> -->\\r\\n    <button class=\\\"modal-close waves-effect waves-green btn-flat\\\" [disabled]=\\\"!rForm.valid\\\" (click)=\\\"onSubmit(rForm)\\\">Submit</button>\\r\\n    <button class=\\\"modal-close waves-effect waves-green btn-flat\\\" (click)=\\\"onCancel(factoryForm)\\\">Cancel</button>\\r\\n  </div>\\r\\n</div> \"","import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport * as io from \"socket.io-client\";\n\n// const io = require('socket.io-client');\n\nimport { FactoryService } from '../shared/factory.service'\nimport { Factory } from '../shared/factory.model';\n\ndeclare var M: any;\n\n@Component({\n  selector: 'app-factory',\n  templateUrl: './factory.component.html',\n  styleUrls: ['./factory.component.css'],\n  providers: [FactoryService]\n})\nexport class FactoryComponent implements OnInit {\n\n  private socket;\n  // private url = 'http://localhost:3000/';\n  private url = 'http://factories-passport.herokuapp.com/';\n  rForm: FormGroup;\n\n  \n  _id:string = null;\n  name:string = '';\n  lower:number = null;\n  upper:number = null;\n  children:number = null;\n\n\n\n\n  constructor(private factoryService: FactoryService, private fb: FormBuilder) { \n\n    this.rForm = fb.group({\n      'name': [null, Validators.required],\n      'lower': [null, Validators.required],\n      'upper': [null, Validators.required],\n      'children': [null, Validators.compose([Validators.required, Validators.min(1), Validators.max(15)])],\n      '_id' :[null]\n    }, {validator: this.boundValidator});\n\n  }\n\n\n\n\n  ngOnInit() {\n    document.addEventListener('DOMContentLoaded', function() {\n      var elems = document.querySelectorAll('.modal');\n      var instances = M.Modal.init(elems, {dismissible : false});\n    });\n\n    this.socket = io(this.url);\n    this.socket.on('update', () =>{\n      this.refreshFactoryList();\n    });\n\n    this.resetForm();\n  }\n\n  resetForm(rForm?){\n    if(rForm){\n      rForm.reset();\n      console.log(\"form reset\");\n    }\n    this.name = null;\n    this.lower = null;\n    this.upper = null;\n    this.children = null;\n    this._id = null;\n\n  }\n\n\n  onSubmit(form){\n    if (form.value._id == null){      \n      this.factoryService.postFactory(form.value).subscribe((res) => {\n        this.socket = io(this.url);\n        this.socket.close();\n        this.resetForm(form);\n        this.refreshFactoryList();\n      });\n\n\n    }\n    else{\n      this.factoryService.putFactory(form.value).subscribe((res) => {\n        this.socket = io(this.url);\n        this.socket.close();\n        this.resetForm(form);\n        this.refreshFactoryList();\n\n      });\n\n    }\n  \n  }\n  \n  refreshFactoryList(){\n    this.factoryService.getFactoryList().subscribe((res) => {\n      this.factoryService.factories = res as Factory[];\n    });\n  }\n  \n  onEdit(fac : Factory){\n    this._id = fac._id\n    this.name = fac.name;\n    this.lower = fac.lower;\n    this.upper = fac.upper;\n    this.children = 0;\n    \n  }\n\n  onCancel(rForm){\n    this.refreshFactoryList();   \n    this.resetForm(rForm);\n  }\n  \n  onDelete(_id: string){\n    if (confirm('Are you sure you want to delete this factory?') == true){\n      this.factoryService.deleteFactory(_id).subscribe((res) => {\n        this.socket = io(this.url);\n        this.socket.close();\n        this.refreshFactoryList();\n      });\n    }\n  }\n\n  boundValidator(group: FormGroup) {\n    if (group.get(['upper']).value < group.get(['lower']).value){\n      return {notValid: true};\n    }\n    else{ return null};\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n\nimport { Factory } from './factory.model';\n\n\n\n@Injectable(\n  // providedIn: 'root'\n)\nexport class FactoryService {\n\n  factories: Factory[];\n  // private socket;\n  // private url = 'http://localhost:3000';\n\n  // readonly baseURL = 'http://localhost:3000/factories';\n  readonly baseURL = '/factories';\n  constructor(private http: HttpClient) { \n\n  }\n\n  postFactory(fac : Factory){\n    \n    return this.http.post(this.baseURL, fac);\n  }\n\n  getFactoryList() {\n    return this.http.get(this.baseURL);\n  }\n\n  putFactory(fac: Factory) {\n    return this.http.put(this.baseURL + `/${fac._id}`, fac);\n  }\n\n  deleteFactory(_id: string){\n    return this.http.delete(this.baseURL + `/${_id}`);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */"],"sourceRoot":""}